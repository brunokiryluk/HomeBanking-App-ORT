@model MVCHomeBanking.Models.Account

@{
    ViewData["Title"] = "Details";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js" integrity="sha512-d9xgZrVZpmmQlfonhQUvTR7lMPtO7NkZMkA0ABN3PHCbKA5nqylQ/yWlFAyY6hYgdF1Qh6nYiuADWwKB4C2WSw==" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.js" integrity="sha512-zO8oeHCxetPn1Hd9PdDleg5Tw1bAaP0YmNvPY8CwcRyUk7d7/+nyElmFrB6f7vg4f7Fv4sui1mcep8RIEShczg==" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.min.js" integrity="sha512-SuxO9djzjML6b9w9/I07IWnLnQhgyYVSpHZx0JV97kGBfTIsUYlWflyuW4ypnvhBrslz1yJ3R+S14fdCWmSmSA==" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.css" integrity="sha512-C7hOmCgGzihKXzyPU/z4nv97W0d9bv4ALuuEbSf6hm93myico9qa0hv4dODThvCsqQUmKmLcJmlpRmCaApr83g==" crossorigin="anonymous" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js" integrity="sha512-hZf9Qhp3rlDJBvAKvmiG+goaaKRZA6LKUO35oK6EsM0/kjPK32Yw7URqrq3Q+Nvbbt8Usss+IekL7CRn83dYmw==" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.css" integrity="sha512-/zs32ZEJh+/EO2N1b0PEdoA10JkdC3zJ8L5FTiQu82LR9S/rOQNfQN7U59U9BC12swNeRAz3HSzIL2vpp4fv3w==" crossorigin="anonymous" />


<script>

    var items = [];
    var labels = [];
    var cont = 0;
    items[0] = 0;
    labels[0] = "";

    @foreach (var mov in Model.movements)
    {
        if (mov.type == MVCHomeBanking.Models.MovementsEnums.TYPE_MOVEMENT.DEPOSIT)
        {
            
            @:cont += @mov.value;
        }
        else if (mov.type == MVCHomeBanking.Models.MovementsEnums.TYPE_MOVEMENT.EXTRACT)
        {
            @:cont -= @mov.value;
        }
        else if (mov.type == MVCHomeBanking.Models.MovementsEnums.TYPE_MOVEMENT.TRANSFER)
        {
            if (Model.accountId == mov.originAccountId)
            {
                @:cont -= @mov.value;
            } else
            {
                @:cont += @mov.value;
            }
        }


        @:items.push(cont);
        @:labels.push("@mov.type")
    }

    alert(items);

    var chartData = {
        labels: labels,
        datasets: [{
            data: items,
        }
        ]
    };
</script>


<h1>Details</h1>

<div>
    <h4>Account</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.direccion)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.direccion)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.telefono)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.telefono)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.balance)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.balance)
        </dd>
    </dl>
</div>



<div class="container">
    <div class="row">
        <div class="col-8">
            <div class="card">
                <div class="card-body">
                    <canvas id="chLine"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    var chLine = document.getElementById("chLine");
    if (chLine) {
        new Chart(chLine, {
            type: 'line',
            data: chartData,
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                legend: {
                    display: false
                }
            }
        });
    }
</script>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.movements.FirstOrDefault().movementId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movements.FirstOrDefault().type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movements.FirstOrDefault().value)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.movements)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.movementId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.value)
                </td>
                <td>
                    <a asp-controller="Movements" asp-action="Details" asp-route-id="@item.movementId">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<div>
    <a asp-action="Edit" asp-route-id="@Model.accountId">Edit</a> |
    <a asp-action="Details" asp-route-id="@ViewBag.clientOrigin" asp-controller="Clients">Back to Client</a>
</div>
